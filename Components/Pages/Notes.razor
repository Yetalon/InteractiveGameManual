@using InteractiveGameManual.Model
@using InteractiveGameManual.Services
@inject NoteService notes
@inject WeaponService weapons
@inject PotionService potions
@inject MonsterService monster
@inject PlayerService player

@page "/notes"

<div>
    <ul>
        @foreach(var note in notes.AllNotes){
            <li>
                <a href="note/@note.Title">@note.Title</a>
                <ul>
                    @if(note.Refrences != null && note.Refrences.Count > 0){
                        foreach(var refrence in note.Refrences){
                            <li>
                                <a href="/details/@refrence">@refrence</a>
                            </li>
                        }
                    }
                </ul>
            </li>
        }
    </ul>
    <div>
        <h1>Create Note</h1>
        Title: <input @bind=title><br>
        <br>
        Text: <input @bind=text><br>
        <br>
        <button @onclick=MakeNote>Make Note</button>
    </div>
    <br>
    <div>
        <h1>Add refrences</h1>
        <label for="NoteForRefrence">Title of note to add refrence to:</label>
        <select @bind=noteForRefrence name="NoteForRefrence" id="NoteForRefrence">
            @foreach(var note in notes.AllNotes){
                <option value="@note.Title">@note.Title</option>
            }
        </select>
        <br>
        <label for="Refrence">Choose a refrence to add to selected note:</label>
        <select @bind=selectedRefrence name="Refrence" id="refrence">
            @foreach(var refrence in notes.AllRefrences){
                <option value="@refrence">@refrence</option>
            }
        </select>
        <br>
        <button @onclick=AddRefrence>Add Refrence</button>
    </div>
    <br>
    <div>
        <h1>Delete Note</h1>
        <label for="NoteToDelete">Title of note to delete</label>
        <select @bind=noteTitle name="NoteToDelete" id="NoteToDelete">
            @foreach(var note in notes.AllNotes){
                <option value="@note.Title">@note.Title</option>
            }
        </select>
        <br>
        <button @onclick=DeleteNote>DeleteNote</button>
    </div>
</div>
@code{
    string title {get; set;}
    string text {get; set;}
    string noteTitle {get; set;}
    string noteForRefrence {get; set;}
    string selectedRefrence {get; set;}
    protected override void OnInitialized(){
            notes.InitalizeAllRefrences(player, monster, weapons, potions);
    }
    private async Task MakeNote(){
        Note toAdd = new Note{
            Title = title,
            Text = text,
            Refrences = new()
        };
        notes.CreateNote(toAdd);
        title = "";
        text = "";
    }
    private async Task DeleteNote(){
        if(notes.AllNotes == null || notes.AllNotes.Count == 0){
            return;
        }
        Note noteToDelete = new();
        if(noteTitle == null || noteTitle ==""){
            noteToDelete = notes.AllNotes[0];
        }
        else{
            foreach(var note in notes.AllNotes){
                if(note.Title.Trim() == noteTitle.Trim()){
                    noteToDelete = note;
                    break;
                }
            }
        }
        notes.DeleteNote(noteToDelete);
        noteTitle = "";
    }
    private async Task AddRefrence(){
        if(noteForRefrence == null || noteForRefrence == ""){
            noteForRefrence = notes.AllNotes[0].Title;
        }
        if(selectedRefrence == null || selectedRefrence == ""){
            selectedRefrence = "Player";
        }
        foreach(var note in notes.AllNotes){
            if(note.Title.Trim() == noteForRefrence){
                note.Refrences.Add(selectedRefrence);
            }
        }
    }
}